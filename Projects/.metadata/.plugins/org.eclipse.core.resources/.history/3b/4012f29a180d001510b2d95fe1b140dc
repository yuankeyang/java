package com.netmed.action.yangsheng;

import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.struts2.ServletActionContext;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.netmed.dao.RegimenDAO;
import com.netmed.pojo.*;


  
/**
 * @author Administrator
 *  养生action，根据输入关键词,显示养生类别的信息
 *  
 *  05-19
 */
public class SearchRegimenAction {
	
		public String execute() {
			
			System.out.println("运行到了SearchRegimenAction！---显示养生列表信息");
			
			HttpServletRequest request = ServletActionContext.getRequest();
			HttpServletResponse response = ServletActionContext.getResponse();
			
			PrintWriter out = null;
			String search_str = "";
			try {
//				System.out.println("运行到了try  catch");
				request.setCharacterEncoding("utf-8");
				response.setContentType("text/html;charset=utf-8");
			    out = response.getWriter();
				search_str = new String(request.getParameter("search_str").getBytes("iso8859-1"), "utf-8");  // 获得关键词！！
				System.out.println("输入的养生名词为："+search_str);
			} catch (UnsupportedEncodingException e1) {
				System.out.println("不能获取搜索关键词");
				e1.printStackTrace();
			} catch (IOException e) {
				System.out.println("不能获取搜索关键词");
				e.printStackTrace();
			}
			
			

			JSONObject json = new JSONObject();
			/**5养生品分别显示！！！*/
			JSONObject healFood = new JSONObject();
			JSONObject regiComp = new JSONObject();
			JSONObject mediBath = new JSONObject();
			JSONObject massPres = new JSONObject();
			JSONObject mediEqui = new JSONObject();
			
			/**先不考虑分类别显示各种药，直接判断字符前缀 */
			JSONArray array = new JSONArray();
			
			JSONArray array1 = new JSONArray();
			JSONArray array2 = new JSONArray();
			JSONArray array3 = new JSONArray();
			JSONArray array4 = new JSONArray();
			JSONArray array5 = new JSONArray();

			ApplicationContext otx = new ClassPathXmlApplicationContext("applicationContext.xml");
			RegimenDAO dao = (RegimenDAO)otx.getBean("RegimenDAO");
			
			System.out.println("创建RegimenDAO成功！！！");
			
			/**字符串拆分**/
			int next = 0;
			String [] search=new String[100];
		    for (int i = 0; i <search_str.length()-1; i++) {
		        next = i+2;
		        search[i] = search_str.substring(i, next);
		    }
			List<HealFood> healFoodList=new ArrayList<HealFood>();
			List<HealFood> healFoodList1=new ArrayList<HealFood>();
			List<ChinRegiComp> regiCompList=new ArrayList<ChinRegiComp>();
			List<ChinRegiComp> regiCompList1=new ArrayList<ChinRegiComp>();
			List<ChinMediBath> mediBathList=new ArrayList<ChinMediBath>();
			List<ChinMediBath> mediBathList1=new ArrayList<ChinMediBath>();
			List<MassPres> massPresList=new ArrayList<MassPres>();
			List<MassPres> massPresList1=new ArrayList<MassPres>();
			List<HomeMediEqui> mediEquiList=new ArrayList<HomeMediEqui>();
			List<HomeMediEqui> mediEquiList1=new ArrayList<HomeMediEqui>();
			
			if(search_str.length()>2){
				System.out.println("进入字符串拆分");
				 for(int i=0;i<search.length;i++){
					 healFoodList1 = dao.queryHealFood(search[i]);
					 regiCompList1 = dao.queryChinRegiComp(search[i]);
					 mediBathList1 = dao.queryChinMediBath(search[i]);
					 massPresList1 = dao.queryMassPres(search[i]);
					 mediEquiList1 = dao.queryHomeMediEqui(search[i]);
					 for(int j=0;j<healFoodList1.size();j++){
						 healFoodList.add(healFoodList1.get(j));
					 }
					 for(int j=0;j<regiCompList1.size();j++){
						 regiCompList.add(regiCompList1.get(j));
					 }
					 for(int j=0;j<mediBathList1.size();j++){
						 mediBathList.add(mediBathList1.get(j));
					 }
					 for(int j=0;j<massPresList1.size();j++){
						 massPresList.add(massPresList1.get(j));
					 }
					 for(int j=0;j<mediEquiList1.size();j++){
						 mediEquiList.add(mediEquiList1.get(j));
					 }
				 }
			}else{
				healFoodList = dao.queryHealFood(search_str);
				regiCompList = dao.queryChinRegiComp(search_str);
				mediBathList = dao.queryChinMediBath(search_str);
				massPresList = dao.queryMassPres(search_str);
				mediEquiList = dao.queryHomeMediEqui(search_str);
			}
			

			int totalNum = healFoodList.size() + regiCompList.size()
					+ mediBathList.size()+massPresList.size()+mediEquiList.size();
			
			/**每种养生品的个数！！！！*/
			JSONObject number = new JSONObject();
			number.put("Nfood",healFoodList.size());
			number.put("Ncomp",regiCompList.size());
			number.put("Nbath",mediBathList.size());
			number.put("Npres",massPresList.size());
			number.put("Nequi",mediEquiList.size());
			
			
			System.out.println("搜寻的相关养生品个数："+totalNum);
			
			if (totalNum == 0) {
				/***如果该药没有在四张养生表中找到，则该名词可能为疾病术语，应该在通过外键寻找
				 * 语找**/
				/*medicine.put("regiId", "0");
				medicine.put("Name", "无此药物，请重新输入正确词条，谢谢");
				medicine.put("Function", "无此药物，请重新输入正确词条，谢谢");
				medicine.put("Usage", "无此药物，请重新输入正确词条，谢谢");
				medicine.put("Precaution", "无此药物，请重新输入正确词条，谢谢");
				array.add(medicine);*/
				json.put("nullInfo","无此养生品数据，请重新输入");
			} else {
				
				//   从保健食品表中查询
				HealFood food;
				ChinRegiComp comp;
				ChinMediBath bath;
				MassPres mass;
				HomeMediEqui equi;
				
				for (int i = 0; i < healFoodList.size(); i++) {
				    food = healFoodList.get(i);
					healFood.put("regiId", food.getHealFoodId());
					healFood.put("Picture", food.getPicture());
					healFood.put("Name", food.getHealFoodName());
					healFood.put("Function", food.getFunction());
					healFood.put("Usage", food.getEdibMeth());
					healFood.put("Precaution", food.getPrecaution());
					
					array1.add(healFood);
					array.add(healFood);

				}
				// ******查询方剂*******
				for (int i = 0; i < regiCompList.size(); i++) {
					comp = regiCompList.get(i);
					regiComp.put("regiId", comp.getCompId());
					regiComp.put("Picture", comp.getPicture());
					regiComp.put("Name", comp.getCompName());
					regiComp.put("Function", comp.getFunction());
					regiComp.put("Usage", comp.getUsagDosa());
					regiComp.put("Precaution", comp.getPrecaution());
					
					array2.add(regiComp);
					array.add(regiComp);
				}

				// ******查询浴方*******
				for (int i = 0; i < mediBathList.size(); i++) {

					bath = mediBathList.get(i);
					mediBath.put("regiId", bath.getBathId());
					mediBath.put("Picture", bath.getPicture());
					mediBath.put("Name", bath.getBathName());
					mediBath.put("Function", bath.getFunction());
					mediBath.put("Usage", bath.getUsagDosa());
					mediBath.put("Precaution", bath.getPrecaution());
					
					array3.add(mediBath);
					array.add(mediBath);
				}
				
				// ******查询按摩方*******
				for (int i = 0; i < massPresList.size(); i++) {
					mass = massPresList.get(i);
					massPres.put("regiId", mass.getMassId());
					massPres.put("Picture", mass.getPicture());
					massPres.put("Name", mass.getMassName());
					massPres.put("Function", mass.getFunction());
					massPres.put("Usage", mass.getOperMeth());
					massPres.put("Precaution", "无");
					
					array4.add(massPres);
					array.add(massPres);
				}
				
				/**查询医疗器械**/
				for (int i = 0; i < mediEquiList.size(); i++) {
					equi = mediEquiList.get(i);
					mediEqui.put("regiId", equi.getProdId());
					mediEqui.put("Picture", equi.getPicture());
					mediEqui.put("Name", equi.getProdName());
					mediEqui.put("Function", equi.getFunction());
					mediEqui.put("Usage", equi.getUsage());
					mediEqui.put("Precaution", equi.getContraindication());
					
					array5.add(mediEqui);
					array.add(mediEqui);
				}

				// **************************************
			}
			json.put("account", totalNum);
			json.put("healFoodArray", array1);
			json.put("regiCompArray", array2);
			json.put("mediBathArray", array3);
			json.put("massPresArray", array4);
			json.put("mediEquiArray", array5);
			
			json.put("regimenArray", array);
			json.put("typeNumb",number);        /**每种养生品的数目**/
			
			out.println(json.toString());   // 将查询到的药物送到端页面！！
			out.flush();
			out.close();
			return "success";
		}


}
